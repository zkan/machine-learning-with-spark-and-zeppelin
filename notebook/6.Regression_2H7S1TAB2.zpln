{
  "paragraphs": [
    {
      "title": "p1",
      "text": "%spark.pyspark\n#https://piotrszul.github.io/spark-tutorial/notebooks/3.1_ML-Introduction.html\n# Prediction: Linear Regression, Random Forest Regression\n# Evaluation: RMSE\n# ML pipeline\n# Split data (training data, testing data)\n# Model tuning:Cross Validation, Search grid\n# Save and load model\n",
      "user": "anonymous",
      "dateUpdated": "2022-06-24 14:17:51.000",
      "progress": 0,
      "config": {
        "lineNumbers": true,
        "tableHide": false,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656080260507_697043523",
      "id": "20220624-152129_429858334",
      "dateCreated": "2022-06-24 14:17:40.000",
      "status": "READY"
    },
    {
      "title": "p2",
      "text": "%sh\nhead -n 5 /notebook/data/winequality-white.csv",
      "user": "anonymous",
      "dateUpdated": "2022-06-25 08:10:23.325",
      "progress": 0,
      "config": {
        "lineNumbers": true,
        "tableHide": false,
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sh",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\"fixed acidity\";\"volatile acidity\";\"citric acid\";\"residual sugar\";\"chlorides\";\"free sulfur dioxide\";\"total sulfur dioxide\";\"density\";\"pH\";\"sulphates\";\"alcohol\";\"quality\"\n7;0.27;0.36;20.7;0.045;45;170;1.001;3;0.45;8.8;6\n6.3;0.3;0.34;1.6;0.049;14;132;0.994;3.3;0.49;9.5;6\n8.1;0.28;0.4;6.9;0.05;30;97;0.9951;3.26;0.44;10.1;6\n7.2;0.23;0.32;8.5;0.058;47;186;0.9956;3.19;0.4;9.9;6\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656080260508_1841829399",
      "id": "paragraph_1656068489136_1199351858",
      "dateCreated": "2022-06-24 14:17:40.000",
      "dateStarted": "2022-06-25 08:10:23.327",
      "dateFinished": "2022-06-25 08:10:23.344",
      "status": "FINISHED"
    },
    {
      "title": "p3",
      "text": "\n%spark.pyspark\nfrom pyspark.context import SparkContext\nfrom pyspark.sql.session import SparkSession\nsc \u003d SparkContext.getOrCreate()\nspark \u003d SparkSession(sc)\n\ninputDF \u003d spark.read.csv(\u0027/notebook/data/winequality-white.csv\u0027,header\u003d\u0027true\u0027, inferSchema\u003d\u0027true\u0027, sep\u003d\u0027;\u0027)\n\n# let\u0027s see the schema and the number of rows\ninputDF.printSchema()\nprint(\"Rows: %s\" % inputDF.count())\n\ninputDF.show(3)",
      "user": "anonymous",
      "dateUpdated": "2022-06-25 08:10:26.082",
      "progress": 0,
      "config": {
        "lineNumbers": true,
        "tableHide": false,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- fixed acidity: double (nullable \u003d true)\n |-- volatile acidity: double (nullable \u003d true)\n |-- citric acid: double (nullable \u003d true)\n |-- residual sugar: double (nullable \u003d true)\n |-- chlorides: double (nullable \u003d true)\n |-- free sulfur dioxide: double (nullable \u003d true)\n |-- total sulfur dioxide: double (nullable \u003d true)\n |-- density: double (nullable \u003d true)\n |-- pH: double (nullable \u003d true)\n |-- sulphates: double (nullable \u003d true)\n |-- alcohol: double (nullable \u003d true)\n |-- quality: integer (nullable \u003d true)\n\nRows: 4898\n+-------------+----------------+-----------+--------------+---------+-------------------+--------------------+-------+----+---------+-------+-------+\n|fixed acidity|volatile acidity|citric acid|residual sugar|chlorides|free sulfur dioxide|total sulfur dioxide|density|  pH|sulphates|alcohol|quality|\n+-------------+----------------+-----------+--------------+---------+-------------------+--------------------+-------+----+---------+-------+-------+\n|          7.0|            0.27|       0.36|          20.7|    0.045|               45.0|               170.0|  1.001| 3.0|     0.45|    8.8|      6|\n|          6.3|             0.3|       0.34|           1.6|    0.049|               14.0|               132.0|  0.994| 3.3|     0.49|    9.5|      6|\n|          8.1|            0.28|        0.4|           6.9|     0.05|               30.0|                97.0| 0.9951|3.26|     0.44|   10.1|      6|\n+-------------+----------------+-----------+--------------+---------+-------------------+--------------------+-------+----+---------+-------+-------+\nonly showing top 3 rows\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d183"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d184"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d185"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d186"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d187"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656080260508_2145668861",
      "id": "20220624-152129_439175374",
      "dateCreated": "2022-06-24 14:17:40.000",
      "dateStarted": "2022-06-25 08:10:26.085",
      "dateFinished": "2022-06-25 08:10:26.614",
      "status": "FINISHED"
    },
    {
      "title": "p4",
      "text": "%spark.pyspark\nfrom pyspark.mllib.linalg import Vectors\nfrom pyspark.ml.feature import VectorAssembler\n\n# select the columns to be used as the features (all except `quality`)\nfeatureColumns \u003d [c for c in inputDF.columns if c !\u003d \u0027quality\u0027]\n\n# create and configure the assembler\nassembler \u003d VectorAssembler(inputCols\u003dfeatureColumns, \n                            outputCol\u003d\"features\")\n\n# transform the original data\ndataDF \u003d assembler.transform(inputDF)\ndataDF.printSchema()\ndataDF.show(3)\n",
      "user": "anonymous",
      "dateUpdated": "2022-06-25 08:10:29.994",
      "progress": 0,
      "config": {
        "lineNumbers": true,
        "tableHide": false,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "title": true,
        "results": {
          "1": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "fixed acidity": "string",
                      "volatile acidity": "string",
                      "citric acid": "string",
                      "residual sugar": "string",
                      "chlorides": "string",
                      "free sulfur dioxide": "string",
                      "total sulfur dioxide": "string",
                      "density": "string",
                      "pH": "string",
                      "sulphates": "string",
                      "alcohol": "string",
                      "quality": "string",
                      "features": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- fixed acidity: double (nullable \u003d true)\n |-- volatile acidity: double (nullable \u003d true)\n |-- citric acid: double (nullable \u003d true)\n |-- residual sugar: double (nullable \u003d true)\n |-- chlorides: double (nullable \u003d true)\n |-- free sulfur dioxide: double (nullable \u003d true)\n |-- total sulfur dioxide: double (nullable \u003d true)\n |-- density: double (nullable \u003d true)\n |-- pH: double (nullable \u003d true)\n |-- sulphates: double (nullable \u003d true)\n |-- alcohol: double (nullable \u003d true)\n |-- quality: integer (nullable \u003d true)\n |-- features: vector (nullable \u003d true)\n\n+-------------+----------------+-----------+--------------+---------+-------------------+--------------------+-------+----+---------+-------+-------+--------------------+\n|fixed acidity|volatile acidity|citric acid|residual sugar|chlorides|free sulfur dioxide|total sulfur dioxide|density|  pH|sulphates|alcohol|quality|            features|\n+-------------+----------------+-----------+--------------+---------+-------------------+--------------------+-------+----+---------+-------+-------+--------------------+\n|          7.0|            0.27|       0.36|          20.7|    0.045|               45.0|               170.0|  1.001| 3.0|     0.45|    8.8|      6|[7.0,0.27,0.36,20...|\n|          6.3|             0.3|       0.34|           1.6|    0.049|               14.0|               132.0|  0.994| 3.3|     0.49|    9.5|      6|[6.3,0.3,0.34,1.6...|\n|          8.1|            0.28|        0.4|           6.9|     0.05|               30.0|                97.0| 0.9951|3.26|     0.44|   10.1|      6|[8.1,0.28,0.4,6.9...|\n+-------------+----------------+-----------+--------------+---------+-------------------+--------------------+-------+----+---------+-------+-------+--------------------+\nonly showing top 3 rows\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d188"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656080260508_1768686405",
      "id": "20220624-152129_520832418",
      "dateCreated": "2022-06-24 14:17:40.000",
      "dateStarted": "2022-06-25 08:10:29.997",
      "dateFinished": "2022-06-25 08:10:30.426",
      "status": "FINISHED"
    },
    {
      "title": "p5",
      "text": "%spark.pyspark\nfrom pyspark.ml.regression import LinearRegression\n\n# fit a `LinearRegression` model using features in colum `features` and label in column `quality`\n#lr \u003d LinearRegression(maxIter\u003d30, featuresCol\u003d\"features\", labelCol\u003d\"quality\")\nlr \u003d LinearRegression(maxIter\u003d30, regParam\u003d0.3, elasticNetParam\u003d0.3, featuresCol\u003d\"features\", labelCol\u003d\"quality\")\nlrModel \u003d lr.fit(dataDF)\n\nfor t in zip(featureColumns, lrModel.coefficients):\n    print(t)\n    \n# predict the quality, the predicted quality will be saved in `prediction` column\npredictionsDF \u003d lrModel.transform(dataDF)\npredictionsDF.show(3)\n#z.show(predictionsDF)\n",
      "user": "anonymous",
      "dateUpdated": "2022-06-25 08:10:32.773",
      "progress": 0,
      "config": {
        "lineNumbers": true,
        "tableHide": false,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "title": true,
        "results": {
          "1": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "fixed acidity": "string",
                      "volatile acidity": "string",
                      "citric acid": "string",
                      "residual sugar": "string",
                      "chlorides": "string",
                      "free sulfur dioxide": "string",
                      "total sulfur dioxide": "string",
                      "density": "string",
                      "pH": "string",
                      "sulphates": "string",
                      "alcohol": "string",
                      "quality": "string",
                      "features": "string",
                      "prediction": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "(\u0027fixed acidity\u0027, 0.0)\n(\u0027volatile acidity\u0027, -0.791689171024518)\n(\u0027citric acid\u0027, 0.0)\n(\u0027residual sugar\u0027, 0.0)\n(\u0027chlorides\u0027, -0.10550323778479173)\n(\u0027free sulfur dioxide\u0027, 0.0)\n(\u0027total sulfur dioxide\u0027, 0.0)\n(\u0027density\u0027, 0.0)\n(\u0027pH\u0027, 0.0)\n(\u0027sulphates\u0027, 0.0)\n(\u0027alcohol\u0027, 0.19726471378351507)\n+-------------+----------------+-----------+--------------+---------+-------------------+--------------------+-------+----+---------+-------+-------+--------------------+-----------------+\n|fixed acidity|volatile acidity|citric acid|residual sugar|chlorides|free sulfur dioxide|total sulfur dioxide|density|  pH|sulphates|alcohol|quality|            features|       prediction|\n+-------------+----------------+-----------+--------------+---------+-------------------+--------------------+-------+----+---------+-------+-------+--------------------+-----------------+\n|          7.0|            0.27|       0.36|          20.7|    0.045|               45.0|               170.0|  1.001| 3.0|     0.45|    8.8|      6|[7.0,0.27,0.36,20...|5.546350842823173|\n|          6.3|             0.3|       0.34|           1.6|    0.049|               14.0|               132.0|  0.994| 3.3|     0.49|    9.5|      6|[6.3,0.3,0.34,1.6...|5.660263454389759|\n|          8.1|            0.28|        0.4|           6.9|     0.05|               30.0|                97.0| 0.9951|3.26|     0.44|   10.1|      6|[8.1,0.28,0.4,6.9...|5.794350562842574|\n+-------------+----------------+-----------+--------------+---------+-------------------+--------------------+-------+----+---------+-------+-------+--------------------+-----------------+\nonly showing top 3 rows\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d189"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d190"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d191"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656080260508_171672667",
      "id": "20220624-152129_712457447",
      "dateCreated": "2022-06-24 14:17:40.000",
      "dateStarted": "2022-06-25 08:10:32.776",
      "dateFinished": "2022-06-25 08:10:34.614",
      "status": "FINISHED"
    },
    {
      "title": "p6",
      "text": "\n%spark.pyspark\nfrom pyspark.ml.evaluation import RegressionEvaluator\n\n# create a regression evaluator with RMSE metrics\n\nevaluator \u003d RegressionEvaluator(\n    labelCol\u003d\u0027quality\u0027, predictionCol\u003d\"prediction\", metricName\u003d\"rmse\")\nrmse \u003d evaluator.evaluate(predictionsDF)\nprint(\"Root Mean Squared Error (RMSE) \u003d %g\" % rmse)\n",
      "user": "anonymous",
      "dateUpdated": "2022-06-25 08:10:37.521",
      "progress": 0,
      "config": {
        "lineNumbers": true,
        "tableHide": false,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Root Mean Squared Error (RMSE) \u003d 0.794772\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d192"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656080260508_1480150519",
      "id": "20220624-152129_1266264153",
      "dateCreated": "2022-06-24 14:17:40.000",
      "dateStarted": "2022-06-25 08:10:37.524",
      "dateFinished": "2022-06-25 08:10:37.846",
      "status": "FINISHED"
    },
    {
      "title": "p7",
      "text": "\n%spark.pyspark\n# split the input data into traning and test dataframes with 70% to 30% weights\n(trainingDF, testDF) \u003d inputDF.randomSplit([0.7, 0.3])\n\nfrom pyspark.ml import Pipeline, PipelineModel\n\n# construct the `Pipeline` that with two stages: the `vector assembler` and `regresion model estimator`\npipeline \u003d Pipeline(stages\u003d[assembler, lr])\n\n# train the pipleline on the traning data\nlrPipelineModel \u003d pipeline.fit(trainingDF)\n\n# make predictions\ntraningPredictionsDF \u003d lrPipelineModel.transform(trainingDF)\ntestPredictionsDF \u003d lrPipelineModel.transform(testDF)\n\n# evaluate the model on test and traning data\nprint(\"RMSE on traning data \u003d %g\" % evaluator.evaluate(traningPredictionsDF))\n\nprint(\"RMSE on test data \u003d %g\" % evaluator.evaluate(testPredictionsDF))\n",
      "user": "anonymous",
      "dateUpdated": "2022-06-25 08:10:39.906",
      "progress": 0,
      "config": {
        "lineNumbers": true,
        "tableHide": false,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "RMSE on traning data \u003d 0.797313\nRMSE on test data \u003d 0.787667\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d193"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d194"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d195"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d196"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656080260508_1311944097",
      "id": "20220624-152129_1004724928",
      "dateCreated": "2022-06-24 14:17:40.000",
      "dateStarted": "2022-06-25 08:10:39.909",
      "dateFinished": "2022-06-25 08:10:40.987",
      "status": "FINISHED"
    },
    {
      "title": "p8",
      "text": "\n%spark.pyspark\nfrom pyspark.ml.tuning import ParamGridBuilder\nfrom pyspark.ml.tuning import CrossValidator\n\n# create a search grid with the cross-product of the parameter values (9 pairs)\nsearch_grid \u003d ParamGridBuilder() \\\n    .addGrid(lr.regParam, [0.0, 0.3, 0.6]) \\\n    .addGrid(lr.elasticNetParam, [0.4, 0.6, 0.8]).build()\n\n# use `CrossValidator` to tune the model\ncv \u003d CrossValidator(estimator \u003d pipeline, estimatorParamMaps \u003d search_grid, evaluator \u003d evaluator, numFolds \u003d 3)\ncvModel \u003d cv.fit(trainingDF)\n\n# evaluate the tuned model\ncvTestPredictionsDF \u003d cvModel.transform(testDF)\nprint(\"RMSE on test data with CV \u003d %g\" % evaluator.evaluate(cvTestPredictionsDF))",
      "user": "anonymous",
      "dateUpdated": "2022-06-25 08:10:42.879",
      "progress": 100,
      "config": {
        "lineNumbers": true,
        "tableHide": false,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "RMSE on test data with CV \u003d 0.745868\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d197"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d198"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d199"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d200"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d201"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d202"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d203"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d204"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d205"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d206"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d207"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d208"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d209"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d210"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d211"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d212"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d213"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d214"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d215"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d216"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d217"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d218"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d219"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d220"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d221"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d222"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d223"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d251"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d252"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d253"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d254"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d255"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d256"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d257"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d258"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d259"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d260"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d261"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d262"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d263"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d264"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d265"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d266"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d267"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d268"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d269"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d270"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d271"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d272"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d273"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d274"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d275"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d276"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d277"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656080260508_1652973789",
      "id": "20220624-152129_2114033227",
      "dateCreated": "2022-06-24 14:17:40.000",
      "dateStarted": "2022-06-25 08:10:42.883",
      "dateFinished": "2022-06-25 08:10:56.862",
      "status": "FINISHED"
    },
    {
      "text": "%spark.pyspark\ncvModel.getNumFolds()",
      "user": "anonymous",
      "dateUpdated": "2022-06-25 08:57:33.191",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "3"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656147443700_367045200",
      "id": "paragraph_1656147443700_367045200",
      "dateCreated": "2022-06-25 08:57:23.701",
      "dateStarted": "2022-06-25 08:57:33.197",
      "dateFinished": "2022-06-25 08:57:33.418",
      "status": "FINISHED"
    },
    {
      "text": "%spark.pyspark\ncvModel.avgMetrics",
      "user": "anonymous",
      "dateUpdated": "2022-06-25 08:57:47.599",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[0.7579664724219605,\n 0.7579664724219605,\n 0.7579664724219605,\n 0.8052295310123365,\n 0.8241248884478551,\n 0.8370655581445012,\n 0.8478163423728433,\n 0.8791426189988085,\n 0.8895681300152802]"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656147458704_1256556488",
      "id": "paragraph_1656147458704_1256556488",
      "dateCreated": "2022-06-25 08:57:38.704",
      "dateStarted": "2022-06-25 08:57:47.607",
      "dateFinished": "2022-06-25 08:57:47.833",
      "status": "FINISHED"
    },
    {
      "text": "%spark.pyspark\ncvModel.getEstimatorParamMaps()",
      "user": "anonymous",
      "dateUpdated": "2022-06-25 08:57:54.297",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[{Param(parent\u003d\u0027LinearRegression_2754dd4cda0a\u0027, name\u003d\u0027regParam\u0027, doc\u003d\u0027regularization parameter (\u003e\u003d 0).\u0027): 0.0,\n  Param(parent\u003d\u0027LinearRegression_2754dd4cda0a\u0027, name\u003d\u0027elasticNetParam\u0027, doc\u003d\u0027the ElasticNet mixing parameter, in range [0, 1]. For alpha \u003d 0, the penalty is an L2 penalty. For alpha \u003d 1, it is an L1 penalty.\u0027): 0.4},\n {Param(parent\u003d\u0027LinearRegression_2754dd4cda0a\u0027, name\u003d\u0027regParam\u0027, doc\u003d\u0027regularization parameter (\u003e\u003d 0).\u0027): 0.0,\n  Param(parent\u003d\u0027LinearRegression_2754dd4cda0a\u0027, name\u003d\u0027elasticNetParam\u0027, doc\u003d\u0027the ElasticNet mixing parameter, in range [0, 1]. For alpha \u003d 0, the penalty is an L2 penalty. For alpha \u003d 1, it is an L1 penalty.\u0027): 0.6},\n {Param(parent\u003d\u0027LinearRegression_2754dd4cda0a\u0027, name\u003d\u0027regParam\u0027, doc\u003d\u0027regularization parameter (\u003e\u003d 0).\u0027): 0.0,\n  Param(parent\u003d\u0027LinearRegression_2754dd4cda0a\u0027, name\u003d\u0027elasticNetParam\u0027, doc\u003d\u0027the ElasticNet mixing parameter, in range [0, 1]. For alpha \u003d 0, the penalty is an L2 penalty. For alpha \u003d 1, it is an L1 penalty.\u0027): 0.8},\n {Param(parent\u003d\u0027LinearRegression_2754dd4cda0a\u0027, name\u003d\u0027regParam\u0027, doc\u003d\u0027regularization parameter (\u003e\u003d 0).\u0027): 0.3,\n  Param(parent\u003d\u0027LinearRegression_2754dd4cda0a\u0027, name\u003d\u0027elasticNetParam\u0027, doc\u003d\u0027the ElasticNet mixing parameter, in range [0, 1]. For alpha \u003d 0, the penalty is an L2 penalty. For alpha \u003d 1, it is an L1 penalty.\u0027): 0.4},\n {Param(parent\u003d\u0027LinearRegression_2754dd4cda0a\u0027, name\u003d\u0027regParam\u0027, doc\u003d\u0027regularization parameter (\u003e\u003d 0).\u0027): 0.3,\n  Param(parent\u003d\u0027LinearRegression_2754dd4cda0a\u0027, name\u003d\u0027elasticNetParam\u0027, doc\u003d\u0027the ElasticNet mixing parameter, in range [0, 1]. For alpha \u003d 0, the penalty is an L2 penalty. For alpha \u003d 1, it is an L1 penalty.\u0027): 0.6},\n {Param(parent\u003d\u0027LinearRegression_2754dd4cda0a\u0027, name\u003d\u0027regParam\u0027, doc\u003d\u0027regularization parameter (\u003e\u003d 0).\u0027): 0.3,\n  Param(parent\u003d\u0027LinearRegression_2754dd4cda0a\u0027, name\u003d\u0027elasticNetParam\u0027, doc\u003d\u0027the ElasticNet mixing parameter, in range [0, 1]. For alpha \u003d 0, the penalty is an L2 penalty. For alpha \u003d 1, it is an L1 penalty.\u0027): 0.8},\n {Param(parent\u003d\u0027LinearRegression_2754dd4cda0a\u0027, name\u003d\u0027regParam\u0027, doc\u003d\u0027regularization parameter (\u003e\u003d 0).\u0027): 0.6,\n  Param(parent\u003d\u0027LinearRegression_2754dd4cda0a\u0027, name\u003d\u0027elasticNetParam\u0027, doc\u003d\u0027the ElasticNet mixing parameter, in range [0, 1]. For alpha \u003d 0, the penalty is an L2 penalty. For alpha \u003d 1, it is an L1 penalty.\u0027): 0.4},\n {Param(parent\u003d\u0027LinearRegression_2754dd4cda0a\u0027, name\u003d\u0027regParam\u0027, doc\u003d\u0027regularization parameter (\u003e\u003d 0).\u0027): 0.6,\n  Param(parent\u003d\u0027LinearRegression_2754dd4cda0a\u0027, name\u003d\u0027elasticNetParam\u0027, doc\u003d\u0027the ElasticNet mixing parameter, in range [0, 1]. For alpha \u003d 0, the penalty is an L2 penalty. For alpha \u003d 1, it is an L1 penalty.\u0027): 0.6},\n {Param(parent\u003d\u0027LinearRegression_2754dd4cda0a\u0027, name\u003d\u0027regParam\u0027, doc\u003d\u0027regularization parameter (\u003e\u003d 0).\u0027): 0.6,\n  Param(parent\u003d\u0027LinearRegression_2754dd4cda0a\u0027, name\u003d\u0027elasticNetParam\u0027, doc\u003d\u0027the ElasticNet mixing parameter, in range [0, 1]. For alpha \u003d 0, the penalty is an L2 penalty. For alpha \u003d 1, it is an L1 penalty.\u0027): 0.8}]"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656147159500_2028583645",
      "id": "paragraph_1656147159500_2028583645",
      "dateCreated": "2022-06-25 08:52:39.500",
      "dateStarted": "2022-06-25 08:57:54.330",
      "dateFinished": "2022-06-25 08:57:54.557",
      "status": "FINISHED"
    },
    {
      "text": "%spark.pyspark\ncvModel.bestModel",
      "user": "anonymous",
      "dateUpdated": "2022-06-25 08:58:38.457",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "PipelineModel_30e0703a4d56"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656147513759_896963963",
      "id": "paragraph_1656147513759_896963963",
      "dateCreated": "2022-06-25 08:58:33.759",
      "dateStarted": "2022-06-25 08:58:38.462",
      "dateFinished": "2022-06-25 08:58:38.682",
      "status": "FINISHED"
    },
    {
      "text": "%spark.pyspark\nlist(zip(cvModel.avgMetrics, search_grid))",
      "user": "anonymous",
      "dateUpdated": "2022-06-25 09:03:53.006",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[(0.7579664724219605,\n  {Param(parent\u003d\u0027LinearRegression_2754dd4cda0a\u0027, name\u003d\u0027regParam\u0027, doc\u003d\u0027regularization parameter (\u003e\u003d 0).\u0027): 0.0,\n   Param(parent\u003d\u0027LinearRegression_2754dd4cda0a\u0027, name\u003d\u0027elasticNetParam\u0027, doc\u003d\u0027the ElasticNet mixing parameter, in range [0, 1]. For alpha \u003d 0, the penalty is an L2 penalty. For alpha \u003d 1, it is an L1 penalty.\u0027): 0.4}),\n (0.7579664724219605,\n  {Param(parent\u003d\u0027LinearRegression_2754dd4cda0a\u0027, name\u003d\u0027regParam\u0027, doc\u003d\u0027regularization parameter (\u003e\u003d 0).\u0027): 0.0,\n   Param(parent\u003d\u0027LinearRegression_2754dd4cda0a\u0027, name\u003d\u0027elasticNetParam\u0027, doc\u003d\u0027the ElasticNet mixing parameter, in range [0, 1]. For alpha \u003d 0, the penalty is an L2 penalty. For alpha \u003d 1, it is an L1 penalty.\u0027): 0.6}),\n (0.7579664724219605,\n  {Param(parent\u003d\u0027LinearRegression_2754dd4cda0a\u0027, name\u003d\u0027regParam\u0027, doc\u003d\u0027regularization parameter (\u003e\u003d 0).\u0027): 0.0,\n   Param(parent\u003d\u0027LinearRegression_2754dd4cda0a\u0027, name\u003d\u0027elasticNetParam\u0027, doc\u003d\u0027the ElasticNet mixing parameter, in range [0, 1]. For alpha \u003d 0, the penalty is an L2 penalty. For alpha \u003d 1, it is an L1 penalty.\u0027): 0.8}),\n (0.8052295310123365,\n  {Param(parent\u003d\u0027LinearRegression_2754dd4cda0a\u0027, name\u003d\u0027regParam\u0027, doc\u003d\u0027regularization parameter (\u003e\u003d 0).\u0027): 0.3,\n   Param(parent\u003d\u0027LinearRegression_2754dd4cda0a\u0027, name\u003d\u0027elasticNetParam\u0027, doc\u003d\u0027the ElasticNet mixing parameter, in range [0, 1]. For alpha \u003d 0, the penalty is an L2 penalty. For alpha \u003d 1, it is an L1 penalty.\u0027): 0.4}),\n (0.8241248884478551,\n  {Param(parent\u003d\u0027LinearRegression_2754dd4cda0a\u0027, name\u003d\u0027regParam\u0027, doc\u003d\u0027regularization parameter (\u003e\u003d 0).\u0027): 0.3,\n   Param(parent\u003d\u0027LinearRegression_2754dd4cda0a\u0027, name\u003d\u0027elasticNetParam\u0027, doc\u003d\u0027the ElasticNet mixing parameter, in range [0, 1]. For alpha \u003d 0, the penalty is an L2 penalty. For alpha \u003d 1, it is an L1 penalty.\u0027): 0.6}),\n (0.8370655581445012,\n  {Param(parent\u003d\u0027LinearRegression_2754dd4cda0a\u0027, name\u003d\u0027regParam\u0027, doc\u003d\u0027regularization parameter (\u003e\u003d 0).\u0027): 0.3,\n   Param(parent\u003d\u0027LinearRegression_2754dd4cda0a\u0027, name\u003d\u0027elasticNetParam\u0027, doc\u003d\u0027the ElasticNet mixing parameter, in range [0, 1]. For alpha \u003d 0, the penalty is an L2 penalty. For alpha \u003d 1, it is an L1 penalty.\u0027): 0.8}),\n (0.8478163423728433,\n  {Param(parent\u003d\u0027LinearRegression_2754dd4cda0a\u0027, name\u003d\u0027regParam\u0027, doc\u003d\u0027regularization parameter (\u003e\u003d 0).\u0027): 0.6,\n   Param(parent\u003d\u0027LinearRegression_2754dd4cda0a\u0027, name\u003d\u0027elasticNetParam\u0027, doc\u003d\u0027the ElasticNet mixing parameter, in range [0, 1]. For alpha \u003d 0, the penalty is an L2 penalty. For alpha \u003d 1, it is an L1 penalty.\u0027): 0.4}),\n (0.8791426189988085,\n  {Param(parent\u003d\u0027LinearRegression_2754dd4cda0a\u0027, name\u003d\u0027regParam\u0027, doc\u003d\u0027regularization parameter (\u003e\u003d 0).\u0027): 0.6,\n   Param(parent\u003d\u0027LinearRegression_2754dd4cda0a\u0027, name\u003d\u0027elasticNetParam\u0027, doc\u003d\u0027the ElasticNet mixing parameter, in range [0, 1]. For alpha \u003d 0, the penalty is an L2 penalty. For alpha \u003d 1, it is an L1 penalty.\u0027): 0.6}),\n (0.8895681300152802,\n  {Param(parent\u003d\u0027LinearRegression_2754dd4cda0a\u0027, name\u003d\u0027regParam\u0027, doc\u003d\u0027regularization parameter (\u003e\u003d 0).\u0027): 0.6,\n   Param(parent\u003d\u0027LinearRegression_2754dd4cda0a\u0027, name\u003d\u0027elasticNetParam\u0027, doc\u003d\u0027the ElasticNet mixing parameter, in range [0, 1]. For alpha \u003d 0, the penalty is an L2 penalty. For alpha \u003d 1, it is an L1 penalty.\u0027): 0.8})]"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656147619311_259169182",
      "id": "paragraph_1656147619311_259169182",
      "dateCreated": "2022-06-25 09:00:19.311",
      "dateStarted": "2022-06-25 09:03:53.011",
      "dateFinished": "2022-06-25 09:03:53.241",
      "status": "FINISHED"
    },
    {
      "title": "p9",
      "text": "\n%spark.pyspark\n#Traning Random Forest\nfrom pyspark.ml.regression import RandomForestRegressor\n\n# define the random forest estimator\nrf \u003d RandomForestRegressor(featuresCol\u003d\"features\", labelCol\u003d\"quality\", numTrees\u003d100, maxBins\u003d128, maxDepth\u003d20, \\\n                           minInstancesPerNode\u003d10, seed\u003d33)\nrfPipeline \u003d Pipeline(stages\u003d[assembler, rf])\n\n# train the random forest model\nrfPipelineModel \u003d rfPipeline.fit(trainingDF)\n\n#evaluate the model\nrfTrainingPredictions \u003d rfPipelineModel.transform(trainingDF)\nrfTestPredictions \u003d rfPipelineModel.transform(testDF)\nprint(\"Random Forest RMSE on traning data \u003d %g\" % evaluator.evaluate(rfTrainingPredictions))\nprint(\"Random Forest RMSE on test data \u003d %g\" % evaluator.evaluate(rfTestPredictions))\n\n## Save model\nrfPipelineModel.write().overwrite().save(\"/notebook/saveModel/rf.model\")\n## Load model\nsavedModel \u003d PipelineModel.load(\"/notebook/saveModel/rf.model\")\n\nrfTraining \u003d savedModel.transform(trainingDF)\nrfTest \u003d savedModel.transform(testDF)\nprint(\"Random Forest RMSE on traning data \u003d %g\" % evaluator.evaluate(rfTraining))\nprint(\"Random Forest RMSE on test data \u003d %g\" % evaluator.evaluate(rfTest))",
      "user": "anonymous",
      "dateUpdated": "2022-06-25 08:29:16.978",
      "progress": 0,
      "config": {
        "lineNumbers": true,
        "tableHide": false,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python",
        "colWidth": 12.0,
        "editorHide": false,
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Random Forest RMSE on traning data \u003d 0.505998\nRandom Forest RMSE on test data \u003d 0.653306\nRandom Forest RMSE on traning data \u003d 0.505998\nRandom Forest RMSE on test data \u003d 0.653306\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d307"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d308"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d309"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d310"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d311"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d312"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d313"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d314"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d315"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d316"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d317"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d318"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d319"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d320"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d321"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d322"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d323"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d324"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d325"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d326"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d327"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d328"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d329"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d330"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d331"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d332"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d333"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d334"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d335"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d336"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d337"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d338"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d339"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d340"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d341"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d342"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d343"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d344"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d345"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d346"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d347"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d348"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d349"
            },
            {
              "jobUrl": "http://f05abd0b797a:4040/jobs/job?id\u003d350"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656080260508_478517376",
      "id": "20220624-152129_1837243752",
      "dateCreated": "2022-06-24 14:17:40.000",
      "dateStarted": "2022-06-25 08:29:16.982",
      "dateFinished": "2022-06-25 08:29:50.247",
      "status": "FINISHED"
    },
    {
      "text": "%spark.pyspark\n",
      "user": "anonymous",
      "dateUpdated": "2022-06-25 08:10:45.335",
      "progress": 0,
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1656144645335_967856251",
      "id": "paragraph_1656144645335_967856251",
      "dateCreated": "2022-06-25 08:10:45.335",
      "status": "READY"
    }
  ],
  "name": "6.Regression",
  "id": "2H7S1TAB2",
  "defaultInterpreterGroup": "spark",
  "version": "0.10.1",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false,
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {}
}